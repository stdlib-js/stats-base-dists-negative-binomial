{
  "version": 3,
  "sources": ["../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-read-only-property' );\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace negativeBinomial\n*/\nvar negativeBinomial = {};\n\n/**\n* @name cdf\n* @memberof negativeBinomial\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/base/dists/negative-binomial/cdf}\n*/\nsetReadOnly( negativeBinomial, 'cdf', require( '@stdlib/stats-base-dists-negative-binomial-cdf' ) );\n\n/**\n* @name NegativeBinomial\n* @memberof negativeBinomial\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/base/dists/negative-binomial/ctor}\n*/\nsetReadOnly( negativeBinomial, 'NegativeBinomial', require( '@stdlib/stats-base-dists-negative-binomial-ctor' ) );\n\n/**\n* @name kurtosis\n* @memberof negativeBinomial\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/base/dists/negative-binomial/kurtosis}\n*/\nsetReadOnly( negativeBinomial, 'kurtosis', require( '@stdlib/stats-base-dists-negative-binomial-kurtosis' ) );\n\n/**\n* @name logpmf\n* @memberof negativeBinomial\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/base/dists/negative-binomial/logpmf}\n*/\nsetReadOnly( negativeBinomial, 'logpmf', require( '@stdlib/stats-base-dists-negative-binomial-logpmf' ) );\n\n/**\n* @name mean\n* @memberof negativeBinomial\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/base/dists/negative-binomial/mean}\n*/\nsetReadOnly( negativeBinomial, 'mean', require( '@stdlib/stats-base-dists-negative-binomial-mean' ) );\n\n/**\n* @name mgf\n* @memberof negativeBinomial\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/base/dists/negative-binomial/mgf}\n*/\nsetReadOnly( negativeBinomial, 'mgf', require( '@stdlib/stats-base-dists-negative-binomial-mgf' ) );\n\n/**\n* @name mode\n* @memberof negativeBinomial\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/base/dists/negative-binomial/mode}\n*/\nsetReadOnly( negativeBinomial, 'mode', require( '@stdlib/stats-base-dists-negative-binomial-mode' ) );\n\n/**\n* @name pmf\n* @memberof negativeBinomial\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/base/dists/negative-binomial/pmf}\n*/\nsetReadOnly( negativeBinomial, 'pmf', require( '@stdlib/stats-base-dists-negative-binomial-pmf' ) );\n\n/**\n* @name quantile\n* @memberof negativeBinomial\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/base/dists/negative-binomial/quantile}\n*/\nsetReadOnly( negativeBinomial, 'quantile', require( '@stdlib/stats-base-dists-negative-binomial-quantile' ) );\n\n/**\n* @name skewness\n* @memberof negativeBinomial\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/base/dists/negative-binomial/skewness}\n*/\nsetReadOnly( negativeBinomial, 'skewness', require( '@stdlib/stats-base-dists-negative-binomial-skewness' ) );\n\n/**\n* @name stdev\n* @memberof negativeBinomial\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/base/dists/negative-binomial/stdev}\n*/\nsetReadOnly( negativeBinomial, 'stdev', require( '@stdlib/stats-base-dists-negative-binomial-stdev' ) );\n\n/**\n* @name variance\n* @memberof negativeBinomial\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/base/dists/negative-binomial/variance}\n*/\nsetReadOnly( negativeBinomial, 'variance', require( '@stdlib/stats-base-dists-negative-binomial-variance' ) );\n\n\n// EXPORTS //\n\nmodule.exports = negativeBinomial;\n"],
  "mappings": "aA0BA,IAAIA,EAAc,QAAS,yCAA0C,EAUjEC,EAAmB,CAAC,EASxBD,EAAaC,EAAkB,MAAO,QAAS,gDAAiD,CAAE,EASlGD,EAAaC,EAAkB,mBAAoB,QAAS,iDAAkD,CAAE,EAShHD,EAAaC,EAAkB,WAAY,QAAS,qDAAsD,CAAE,EAS5GD,EAAaC,EAAkB,SAAU,QAAS,mDAAoD,CAAE,EASxGD,EAAaC,EAAkB,OAAQ,QAAS,iDAAkD,CAAE,EASpGD,EAAaC,EAAkB,MAAO,QAAS,gDAAiD,CAAE,EASlGD,EAAaC,EAAkB,OAAQ,QAAS,iDAAkD,CAAE,EASpGD,EAAaC,EAAkB,MAAO,QAAS,gDAAiD,CAAE,EASlGD,EAAaC,EAAkB,WAAY,QAAS,qDAAsD,CAAE,EAS5GD,EAAaC,EAAkB,WAAY,QAAS,qDAAsD,CAAE,EAS5GD,EAAaC,EAAkB,QAAS,QAAS,kDAAmD,CAAE,EAStGD,EAAaC,EAAkB,WAAY,QAAS,qDAAsD,CAAE,EAK5G,OAAO,QAAUA",
  "names": ["setReadOnly", "negativeBinomial"]
}
